[["prepare-final-dataset.html", "Chapter 4 Prepare final dataset 4.1 Extract environmental data associated to presence-absence data 4.2 Exploratory plots of environmental variables 4.3 Exploratory plots of environmental variables depending on presence/absence data 4.4 Correlation analysis 4.5 Variance Inflation Factor (VIF)", " Chapter 4 Prepare final dataset Loading required libraries # library(rgdal) # to read shp # library(raster) # to work with rasters # library (here) # Libraries for reproducible workflow # library (sp) # to perform raster # library(HH) #to calculate for VIF (Variance Inflation Factor) # library(ggplot2)# plots # library(gridExtra)# multiple plots # library(dplyr) # library(RColorBrewer)#plotting colors # library(fields)#ploting images # library(marmap)#ploting world # library(maptools)#mapping # library(rstudioapi) # theme_set(theme_bw(base_size = 16)) 4.1 Extract environmental data associated to presence-absence data Once the environmental rasters and the species abundance data (including pseudo-absences) have been prepared, we need to merge both sources of data. First, we load the objects created in previous sections: #load presence-absence data load(&quot;data/outputs_for_modelling/PAdata.RData&quot;) # load environmental rasters library(sp) library(raster) myBioracle.layers&lt;-stack(&quot;data/env/myBioracle.layers.tif&quot;) Now we can extract the environmental data associated to each of the species data points using the function extract from the raster package. The method employed is bilinear that returns the interpolated value from the four nearest raster cells. raster_ex &lt;- raster::extract(x=myBioracle.layers, y=dat[,c(&quot;LON&quot;,&quot;LAT&quot;)], method=&quot;bilinear&quot;, na.rm=TRUE, df=T) colnames(raster_ex)[-1]&lt;-c(&quot;BO2_chlomean_ss&quot;, &quot;BO2_salinitymean_ss&quot;, &quot;BO_damean&quot; ,&quot;BO_sstmean&quot;, &quot;BO_bathymean&quot;) head(raster_ex) ## ID BO2_chlomean_ss BO2_salinitymean_ss BO_damean BO_sstmean BO_bathymean ## 1 1 1.20410309 35.42666 0.1973854 16.99439 -33.81752 ## 2 2 1.20410309 35.42666 0.1973854 16.99439 -33.81752 ## 3 3 0.08455528 36.43070 0.0290000 25.52963 -4174.47000 ## 4 4 1.20410309 35.42666 0.1973854 16.99439 -33.81752 ## 5 5 0.72283228 34.20426 0.0817736 15.21486 -1208.56240 ## 6 6 1.20410309 35.42666 0.1973854 16.99439 -33.81752 We merge the presence/absence data and the environmental data: data &lt;- cbind(dat, raster_ex) We can conduct some quick checks on the new dataset: dim(data) ## [1] 30158 11 str(data) ## &#39;data.frame&#39;: 30158 obs. of 11 variables: ## $ scientificName : chr &quot;Thunnus alalunga&quot; &quot;Thunnus alalunga&quot; &quot;Thunnus alalunga&quot; &quot;Thunnus alalunga&quot; ... ## $ LON : num 18.5 18.5 -76.6 18.5 -69.3 ... ## $ LAT : num -34.4 -34.4 28.4 -34.4 39.9 ... ## $ YEAR : num 2004 2004 2000 2000 2000 ... ## $ occurrenceStatus : num 1 1 1 1 1 1 1 1 1 1 ... ## $ ID : num 1 2 3 4 5 6 7 8 9 10 ... ## $ BO2_chlomean_ss : num 1.2041 1.2041 0.0846 1.2041 0.7228 ... ## $ BO2_salinitymean_ss: num 35.4 35.4 36.4 35.4 34.2 ... ## $ BO_damean : num 0.1974 0.1974 0.029 0.1974 0.0818 ... ## $ BO_sstmean : num 17 17 25.5 17 15.2 ... ## $ BO_bathymean : num -33.8 -33.8 -4174.5 -33.8 -1208.6 ... head(data) ## scientificName LON LAT YEAR occurrenceStatus ID BO2_chlomean_ss ## 1 Thunnus alalunga 18.4972 -34.3569 2004 1 1 1.20410309 ## 4 Thunnus alalunga 18.4972 -34.3569 2004 1 2 1.20410309 ## 7 Thunnus alalunga -76.6000 28.4000 2000 1 3 0.08455528 ## 9 Thunnus alalunga 18.4972 -34.3569 2000 1 4 1.20410309 ## 11 Thunnus alalunga -69.3100 39.8800 2000 1 5 0.72283228 ## 12 Thunnus alalunga 18.4972 -34.3569 2001 1 6 1.20410309 ## BO2_salinitymean_ss BO_damean BO_sstmean BO_bathymean ## 1 35.42666 0.1973854 16.99439 -33.81752 ## 4 35.42666 0.1973854 16.99439 -33.81752 ## 7 36.43070 0.0290000 25.52963 -4174.47000 ## 9 35.42666 0.1973854 16.99439 -33.81752 ## 11 34.20426 0.0817736 15.21486 -1208.56240 ## 12 35.42666 0.1973854 16.99439 -33.81752 summary(data) ## scientificName LON LAT YEAR ## Length:30158 Min. :-97.625 Min. :-82.592 Min. :2000 ## Class :character 1st Qu.:-68.960 1st Qu.:-31.816 1st Qu.:2001 ## Mode :character Median :-28.414 Median : 23.570 Median :2002 ## Mean :-30.628 Mean : 7.374 Mean :2003 ## 3rd Qu.: 3.723 3rd Qu.: 38.251 3rd Qu.:2004 ## Max. : 68.380 Max. : 88.981 Max. :2013 ## NA&#39;s :15079 ## occurrenceStatus ID BO2_chlomean_ss BO2_salinitymean_ss ## Min. :0.0 Min. : 1 Min. :0.01585 Min. : 1.622 ## 1st Qu.:0.0 1st Qu.: 7540 1st Qu.:0.08975 1st Qu.:34.412 ## Median :0.5 Median :15080 Median :0.25049 Median :35.427 ## Mean :0.5 Mean :15080 Mean :0.42094 Mean :35.215 ## 3rd Qu.:1.0 3rd Qu.:22619 3rd Qu.:0.68848 3rd Qu.:36.214 ## Max. :1.0 Max. :30158 Max. :3.42513 Max. :39.249 ## NA&#39;s :99 NA&#39;s :99 ## BO_damean BO_sstmean BO_bathymean ## Min. :0.02104 Min. :-1.683 Min. :-8348.0 ## 1st Qu.:0.03528 1st Qu.:15.005 1st Qu.:-4272.0 ## Median :0.05074 Median :18.859 Median :-2100.1 ## Mean :0.07912 Mean :18.039 Mean :-2430.3 ## 3rd Qu.:0.08850 3rd Qu.:25.248 3rd Qu.: -703.4 ## Max. :0.67065 Max. :30.784 Max. : 262.3 ## NA&#39;s :162 NA&#39;s :162 NA&#39;s :162 The new dataset has 30158 rows and 13 columns, and there are 162 NAs in the environmental dataset. Note also that there are some positive bathymetries that correspond to points located very close to the coast. We remove both the points with NAs and the points with positive bathymetries: data &lt;- subset(data, BO_bathymean&lt;0) We check again the dataset: dim(data) ## [1] 29435 11 summary(data) # 29435 sites : 4 are NAs ## scientificName LON LAT YEAR ## Length:29435 Min. :-97.625 Min. :-77.362 Min. :2000 ## Class :character 1st Qu.:-69.655 1st Qu.:-29.933 1st Qu.:2001 ## Mode :character Median :-29.209 Median : 25.360 Median :2002 ## Mean :-31.571 Mean : 8.158 Mean :2003 ## 3rd Qu.: 2.184 3rd Qu.: 38.324 3rd Qu.:2004 ## Max. : 67.898 Max. : 83.919 Max. :2013 ## NA&#39;s :14873 ## occurrenceStatus ID BO2_chlomean_ss BO2_salinitymean_ss ## Min. :0.0000 Min. : 1 Min. :0.01585 Min. : 1.622 ## 1st Qu.:0.0000 1st Qu.: 7660 1st Qu.:0.08862 1st Qu.:34.403 ## Median :0.0000 Median :15237 Median :0.23545 Median :35.427 ## Mean :0.4947 Mean :15168 Mean :0.40205 Mean :35.233 ## 3rd Qu.:1.0000 3rd Qu.:22686 3rd Qu.:0.66001 3rd Qu.:36.222 ## Max. :1.0000 Max. :30158 Max. :3.42513 Max. :39.249 ## NA&#39;s :4 NA&#39;s :4 ## BO_damean BO_sstmean BO_bathymean ## Min. :0.02104 Min. :-1.683 Min. :-8348.01 ## 1st Qu.:0.03500 1st Qu.:14.936 1st Qu.:-4302.35 ## Median :0.04996 Median :18.926 Median :-2182.12 ## Mean :0.07516 Mean :18.085 Mean :-2476.86 ## 3rd Qu.:0.08770 3rd Qu.:25.329 3rd Qu.: -792.09 ## Max. :0.67065 Max. :30.372 Max. : -0.09 ## The resulting dataset has 29435, from which 4 have NAs in BO2_chlomean_ss and BO2_salinitymean_ss. We save this dataset in a local file to work on it in subsequent steps. LI: REMOVE THE 4 NAs?? IT WILL FACILITATE MODEL COMPARISON save(list=&quot;data&quot;, file=&quot;data/outputs_for_modelling/PAdata_with_env.RData&quot;) 4.2 Exploratory plots of environmental variables Before starting the modelling process, we are going to explore the individual variables in the dataset. The YEAR variable is only available for the presence data and the time coverage is quite different along time as shown by the following plot: table(is.na(dat$YEAR), dat$occurrenceStatus) # NOTE THAT THE PSEUDO-ABSENCES DO NOT HAVE YEAR. So MAYBE BETTER TO REMOVE THIS PART. ## ## 0 1 ## FALSE 0 15079 ## TRUE 15079 0 library(dplyr) library(tidyr) library(ggplot2) theme_set(theme_bw(base_size=16)) data %&gt;% # filter(!is.na(YEAR)) %&gt;% group_by(YEAR) %&gt;% summarise(N=n()) %&gt;% ggplot(aes(x=YEAR, y=N)) + geom_bar(stat=&quot;identity&quot;, col=&quot;red&quot;, fill=&quot;red&quot;, alpha=0.5) We can explore the distributions of each of the environmental variables by looking at the violin and boxplots and at the histograms and density plots as follows: tmp &lt;- data[, c(&quot;BO2_chlomean_ss&quot;,&quot;BO2_salinitymean_ss&quot;,&quot;BO_damean&quot;,&quot;BO_sstmean&quot;,&quot;BO_bathymean&quot;)] tmp &lt;- pivot_longer(data=tmp, cols=everything()) ggplot(data=tmp, aes(x=name, y=value)) + geom_boxplot()+ facet_wrap(~name, scales=&quot;free&quot;) ggplot(data=tmp, aes(x=name, y=value)) + geom_violin(fill=&quot;red&quot;, alpha=0.3)+ geom_boxplot(width=0.1)+ facet_wrap(~name, scales=&quot;free&quot;) ggplot(data=tmp, aes(x=value)) + geom_histogram(aes(y= ..density.. ), colour=1, fill=&quot;red&quot;, alpha=0.3)+ geom_density(lwd=1)+ facet_wrap(~name, scales=&quot;free&quot;) 4.3 Exploratory plots of environmental variables depending on presence/absence data To analyse if there are preferences for certain ranges of the environmental variables, we compare the distribution of the environmental variables for presence and absence data: tmp &lt;- data[, c(&quot;LON&quot;, &quot;LAT&quot;, &quot;BO2_chlomean_ss&quot;,&quot;BO2_salinitymean_ss&quot;,&quot;BO_damean&quot;,&quot;BO_sstmean&quot;,&quot;BO_bathymean&quot;,&quot;occurrenceStatus&quot;)] tmp &lt;- pivot_longer(data=tmp, cols=!occurrenceStatus) ggplot(data=tmp, aes(x=factor(occurrenceStatus), y=value, fill=factor(occurrenceStatus), group=factor(occurrenceStatus))) + geom_violin(alpha=0.3)+ geom_boxplot(fill=&quot;white&quot;, width=0.1)+ facet_wrap(~name, scales=&quot;free&quot;)+ theme(legend.position = &quot;bottom&quot;,legend.background = element_rect(fill = &quot;white&quot;, colour = NA)) ggplot(data=tmp, aes(x=value, fill=factor(occurrenceStatus), group=factor(occurrenceStatus))) + geom_density(lwd=1, alpha=0.3)+ facet_wrap(~name, scales=&quot;free&quot;)+ theme(legend.position = &quot;bottom&quot;,legend.background = element_rect(fill = &quot;white&quot;, colour = NA)) 4.4 Correlation analysis Some of the environmental variables can be correlated. The GGally package allows to easily produce pairplots of the variables and their correlation. library(GGally) tmp &lt;- data[, c(&quot;LON&quot;,&quot;LAT&quot;,&quot;BO2_chlomean_ss&quot;,&quot;BO2_salinitymean_ss&quot;,&quot;BO_damean&quot;,&quot;BO_sstmean&quot;,&quot;BO_bathymean&quot;)] ggpairs(tmp) A more detailed analysis of the potential correlations can be conducted using the package ggcorrplot: library(ggcorrplot) tmp &lt;- data[, c(&quot;LON&quot;,&quot;LAT&quot;,&quot;BO2_chlomean_ss&quot;,&quot;BO2_salinitymean_ss&quot;,&quot;BO_damean&quot;,&quot;BO_sstmean&quot;,&quot;BO_bathymean&quot;)] mat &lt;- cor(tmp, use=&quot;complete.obs&quot;) p.mat &lt;- cor_pmat(tmp) ggcorrplot(mat, type = &quot;lower&quot;, lab=T, p.mat = p.mat) 4.5 Variance Inflation Factor (VIF) Furthermore, multicollinearity in regression analysis can be explored using the VIF (Variance Inflation Factor). The value of the VIF statistics indicate the level of multicollinearity with the rest of the variables: VIF equal to 1 = variables are not correlated VIF between 1 and 5 = variables are moderately correlated VIF greater than 5 = variables are highly correlated There are several packages in R that allows to calculate the VIF statistics. In this case we use the package HH: library(HH) # select variables for vif calculation v.table &lt;- data %&gt;% dplyr::select (BO2_salinitymean_ss, BO_sstmean, BO2_chlomean_ss, BO_damean, BO_bathymean) # get vif results out.vif &lt;- vif(v.table) sort(out.vif) ## BO_sstmean BO_bathymean BO2_salinitymean_ss BO2_chlomean_ss ## 1.383474 1.525139 1.532979 5.063880 ## BO_damean ## 5.246001 We remove the variable that has the highest VIF value and we test again the multicollinearity: v.table &lt;- v.table %&gt;% dplyr::select (-BO_damean) # get new vif results out.vif &lt;- vif(v.table) sort(out.vif) ## BO2_salinitymean_ss BO_sstmean BO_bathymean BO2_chlomean_ss ## 1.245307 1.314083 1.496858 1.660072 Now all the variables have VIF values that are acceptable. So, we proceed to save these variables for the next modelling stages: data &lt;- data %&gt;% dplyr::select (-BO_damean) # save(list=&quot;data&quot;, file=&quot;data/outputs_for_modelling/PAdata_with_env.RData&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
